require('dotenv').config();
const { Sequelize } = require('sequelize');

async function testModels() {
  console.log('üîç Testing database models initialization...\n');
  
  const sequelize = new Sequelize({
    dialect: 'postgres',
    host: process.env.DB_HOST,
    port: parseInt(process.env.DB_PORT, 10),
    database: process.env.DB_NAME,
    username: process.env.DB_USER,
    password: process.env.DB_PASSWORD,
    logging: console.log
  });

  try {
    console.log('1Ô∏è‚É£ Testing database connection...');
    await sequelize.authenticate();
    console.log('‚úÖ Database connection successful!\n');

    console.log('2Ô∏è‚É£ Importing models...');
    const models = {
      User: require('./src/models/User'),
      VisitorPass: require('./src/models/VisitorPass'),
      Notice: require('./src/models/Notice'),
      Emergency: require('./src/models/Emergency'),
      RefreshToken: require('./src/models/RefreshToken'),
      NoticeReadStatus: require('./src/models/NoticeReadStatus'),
      Society: require('./src/models/Society'),
      Flat: require('./src/models/Flat'),
      MaintenanceBill: require('./src/models/MaintenanceBill'),
      Payment: require('./src/models/Payment')
    };
    console.log('‚úÖ Models imported successfully!\n');

    console.log('3Ô∏è‚É£ Initializing models...');
    Object.values(models).forEach(model => {
      if (typeof model.init === 'function') {
        model.init(sequelize);
        console.log(`‚úÖ Initialized model: ${model.name}`);
      } else {
        console.log(`‚ö†Ô∏è Model ${model.name} doesn't have init method`);
      }
    });

    console.log('\n4Ô∏è‚É£ Setting up model associations...');
    Object.values(models).forEach(model => {
      if (typeof model.associate === 'function') {
        model.associate(models);
        console.log(`‚úÖ Set up associations for: ${model.name}`);
      } else {
        console.log(`‚ö†Ô∏è Model ${model.name} doesn't have associate method`);
      }
    });

    console.log('\n5Ô∏è‚É£ Syncing database...');
    await sequelize.sync({ alter: true });
    console.log('‚úÖ Database synchronized successfully!');

    await sequelize.close();
    console.log('\n‚ú® All tests completed successfully!');
  } catch (error) {
    console.error('\n‚ùå Test failed:', error);
    if (error.original) {
      console.error('Original error:', error.original);
    }
    process.exit(1);
  }
}

testModels(); 